buildscript {

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
    }

}


plugins {
    id "java"
}

//定义变量
ext {
    springBootVersion = '2.1.4.RELEASE'
    grpcVersion = '1.17.1'
    reflectionsVersion = '0.9.11'
    libthriftVersion = '0.11.0'
    protobufVersion = '3.6.1'
    sdkCoreVersion = "4.2.2"
    sdkDysmsapiVersion = "1.1.0"
    nettyAllVersion = "4.1.34.Final"
    gsonVersion = "2.8.5"
    jodaTimeVersion = "2.10.1"
    lombokVersion = "1.18.4"
    junitVersion = "4.13-beta-1"
    baomidouVersion = "3.1.1"
    mysqlVersion = "8.0.15"
    log4jAPIVersion = "2.11.2"
//    druidVersion="1.1.12"
    druidVersion = "1.1.16"
    swaggerVersion = "2.9.2"
    redisVersion = "1.4.7.RELEASE"
    jacksonVersion = "2.9.8"
    jannotationVersion = "17.0.0"
    fastJsonVersion = "1.2.46"
    shiroVersion = "1.4.0"
    shiroRedis="3.2.3"
    commonLangVerion="3.9"
    fastjsonVserion="1.2.57"
}

configure(allprojects) { project ->
    group 'com.java'
    version '1.0.0'

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    def commonCompilerArgs =
            ["-Xlint:serial", "-Xlint:cast", "-Xlint:classfile", "-Xlint:dep-ann",
             "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
             "-Xlint:path", "-Xlint:processing", "-Xlint:static", "-Xlint:try", "-Xlint:-options"]

    compileJava.options*.compilerArgs = commonCompilerArgs +
            ["-Xlint:varargs", "-Xlint:fallthrough", "-Xlint:rawtypes",
             "-Xlint:deprecation", "-Xlint:unchecked", "-Werror"]

    compileTestJava.options*.compilerArgs = commonCompilerArgs +
            ["-Xlint:-varargs", "-Xlint:-fallthrough", "-Xlint:-rawtypes",
             "-Xlint:-deprecation", "-Xlint:-unchecked"]

    compileJava {
        sourceCompatibility = '1.11'  // can be switched to 8 for testing
        targetCompatibility = '1.11'
        options.encoding = "UTF-8"
    }

//    compileTestJava {
//        sourceCompatibility = '1.8'  // can be switched to 8 for testing
//        targetCompatibility = '1.8'
//        options.encoding = "UTF-8"
//        options.compilerArgs += "-parameters"
//    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
    }

    dependencies {

        compile(
                "org.reflections:reflections:${reflectionsVersion}",
                "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
                "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                "mysql:mysql-connector-java:${mysqlVersion}",
                "junit:junit:${junitVersion}",
                "com.google.code.gson:gson:${gsonVersion}",
                "joda-time:joda-time:${jodaTimeVersion}",
                "org.projectlombok:lombok:${lombokVersion}",
                "org.jetbrains:annotations:${jannotationVersion}"
        )

        implementation('org.springframework.boot:spring-boot-starter-web')

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    }

//    configurations {
//        all*.exclude module: 'spring-boot-starter-logging'
//        all*.exclude module: 'logback-classic'
//        all*.exclude module: 'log4j-over-slf4j'
//    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }


    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

}

