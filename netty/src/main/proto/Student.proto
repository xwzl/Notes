syntax = "proto3";

package com.java.netty.proto;

option java_package = "com.java.netty.google";
option java_outer_classname = "StudentProto";
option java_multiple_files = true;

// gradle generateProto 生成文件，在build目录下generated中
// GRPC四种调用方式
// 1. 客户端发起一个请求，服务端响应
// 2. 客户端发起单个数据请求，服务端相应一个流响应
// 3. 与2相反
// 4. 客户端发起流，服务端响应流
service StudentService {

    // 对象 => 对象
    rpc GetRealNameByUsername (MyRequest) returns (MyResponse){}

    //stream定义流 参数和响应必须是message类型的 对象 => 流
    rpc GetStudentsByAge (StudentRequest) returns (stream StudentResponse){}

    // 流 => 对象
    rpc GetStudentsWrapperByAges(stream StudentRequest) returns (StudentResponseList){}

    // 流 => 流
    rpc Chat (stream StreamRequest) returns (stream StreamResponse) {}

}

// 对象类型 要求请求和响应必须是message
message MyRequest {
  string username = 1;
}

message MyResponse {
   string realname = 2;
}

message StudentRequest{
   int32 age = 1;
}

message StudentResponse {
   string name = 1;
   int32 age = 2;
   string city = 3;
}

message StudentResponseList {
   repeated StudentResponse studentResponse = 1;
}

message StreamRequest {
     string request_info =1;
}

message StreamResponse {
     string response_info = 1;
}